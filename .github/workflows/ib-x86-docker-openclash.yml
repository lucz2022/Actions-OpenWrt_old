name: IB x86_64 24.10.2 (1GiB ext4)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      IB_BASE_URL: https://downloads.openwrt.org/releases/24.10.2/targets/x86/64
      IB_FILE: openwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64.tar.zst
      # 选择 Profile：generic-efi = UEFI；若只要 BIOS，把 generic-efi 改为 generic
      PROFILE: generic-efi
      # 你的包（已去重）：
      PACKAGES: >
        dnsmasq-full -dnsmasq -dnsmasq-dhcpv6
        luci luci-base luci-compat
        bash curl ca-bundle ipset ip-full ruby ruby-yaml unzip
        iptables-nft kmod-nft-tproxy kmod-tun kmod-inet-diag
        kmod-veth kmod-br-netfilter kmod-igc
        kmod-ne2k-pci kmod-pcnet32 kmod-r8169 kmod-sis900
        kmod-tg3 kmod-via-rhine kmod-via-velocity kmod-forcedeth
        kmod-fs-vfat kmod-drm-i915
      # 生成 ext4 镜像根分区大小（MiB）
      ROOTFS_MB: "1024"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare host
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq xz-utils zstd wget ca-certificates

      - name: Download ImageBuilder
        run: |
          set -e
          echo "Base: $IB_BASE_URL"
          wget -q "$IB_BASE_URL/$IB_FILE"
          tar --use-compress-program=unzstd -xf "$IB_FILE"

      - name: Configure ImageBuilder (ext4 + 1GiB rootfs)
        working-directory: ./openwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64
        run: |
          # 改成 ext4，并把根分区调到 1GiB
          {
            echo 'CONFIG_TARGET_ROOTFS_EXT4FS=y'
            echo '# CONFIG_TARGET_ROOTFS_SQUASHFS is not set'
            echo "CONFIG_TARGET_ROOTFS_PARTSIZE=${ROOTFS_MB}"
          } >> .config
          make defconfig
          echo "PACKAGES(before)=$PACKAGES"

      - name: Build (auto-drop missing packages)
        working-directory: ./openwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64
        run: |
          set -e
          # 尝试最多 5 轮：若有“Cannot install package XXX”则自动从列表里剔除再重试
          p="$PACKAGES"
          for i in 1 2 3 4 5; do
            echo "== Manifest check round $i =="
            if make -s manifest PROFILE="$PROFILE" PACKAGES="$p" >/tmp/manifest.ok 2>/tmp/manifest.err; then
              echo "Manifest OK"; break
            fi
            if ! grep -q "Cannot install package" /tmp/manifest.err; then
              echo "Manifest failed but没有缺包提示，直接退出"; cat /tmp/manifest.err; exit 1
            fi
            # 收集缺包
            missing=$(grep -o "Cannot install package [^.]\\+" /tmp/manifest.err | awk '{print $4}' | sort -u)
            echo "Missing: $missing"
            # 从 p 中剔除
            for m in $missing; do
              p=$(echo " $p " | sed -E "s/ +$m( +|$)/ /g")
            done
            echo "PACKAGES(now)=$p"
          done
          echo "== Start build =="
          make -j"$(nproc)" image PROFILE="$PROFILE" PACKAGES="$p" FILES=files/ || make V=sc image PROFILE="$PROFILE" PACKAGES="$p" FILES=files/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-24.10.2-images
          path: |
            openwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64/bin/targets/x86/64/*
