name: OpenWrt-IB-x86_64-24.10.2

on:
  workflow_dispatch:

env:
  IB_BASE_URL: https://downloads.openwrt.org/releases/24.10.2/targets/x86/64
  IB_FILE: openwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64.tar.zst
  PROFILE: generic
  ROOTFS_MB: "1024"
  PACKAGES: >-
    dnsmasq-full -dnsmasq -dnsmasq-dhcpv6
    luci luci-base luci-compat
    bash curl ca-bundle ipset ip-full ruby ruby-yaml unzip
    firewall4 nftables iptables-nft
    kmod-nf-conntrack kmod-nf-nat kmod-nft-nat kmod-nft-tproxy kmod-nft-socket kmod-nft-offload
    kmod-tun kmod-inet-diag
    kmod-veth kmod-br-netfilter
    ethtool irqbalance
    kmod-igc
    kmod-ne2k-pci kmod-pcnet32 kmod-r8169 kmod-sis900 kmod-tg3 kmod-via-rhine kmod-via-velocity
    kmod-forcedeth
    kmod-fs-vfat
    kmod-drm-i915

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare host
        shell: bash
        run: |
          set -euxo pipefail
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL || true
          sudo docker image prune --all --force || true
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y --no-install-recommends \
            build-essential gawk wget curl ca-certificates xz-utils zstd \
            rsync file python3 tar coreutils git fdisk
          sudo -E apt-get -qq autoremove --purge -y
          sudo -E apt-get -qq clean

      - name: Download & extract ImageBuilder
        shell: bash
        run: |
          set -euxo pipefail
          curl -fL --retry 5 -o "${IB_FILE}" "${IB_BASE_URL}/${IB_FILE}"
          tar --zstd -xf "${IB_FILE}"
          IB_DIR="${IB_FILE%.tar.zst}"
          echo "IB_DIR=${IB_DIR}" >> "$GITHUB_ENV"

      - name: Put custom files (optional)
        shell: bash
        run: |
          set -euxo pipefail
          if [ -d "files" ]; then
            rsync -a files/ "${IB_DIR}/files/"
          fi

      # ★ 关键：写 .config 并 defconfig，让 ROOTFS_PARTSIZE 生效
      - name: Configure ImageBuilder (.config)
        shell: bash
        run: |
          set -euxo pipefail
          cd "${IB_DIR}"
          # 保留已有 .config 的同时强制覆盖关键项
          { grep -vE '^(CONFIG_TARGET_ROOTFS_PARTSIZE=|CONFIG_TARGET_ROOTFS_EXT4FS=|CONFIG_TARGET_ROOTFS_SQUASHFS=)' .config 2>/dev/null || true; } > .config.tmp
          mv .config.tmp .config
          cat >> .config <<EOF
            CONFIG_TARGET_ROOTFS_EXT4FS=y
            # CONFIG_TARGET_ROOTFS_SQUASHFS is not set
            CONFIG_TARGET_ROOTFS_PARTSIZE=${ROOTFS_MB}
            # 可选：同时产出 EFI 启动镜像
            CONFIG_GRUB_IMAGES=y
            CONFIG_EFI_IMAGES=y
            EOF
          make defconfig
          grep -E 'CONFIG_TARGET_ROOTFS_(EXT4FS|SQUASHFS|PARTSIZE)=' .config

      - name: Preflight - prune missing packages
        shell: bash
        run: |
          set -euxo pipefail
          cd "${IB_DIR}"
          LEFT="${PACKAGES}"
          echo "PACKAGES(before)=${LEFT}"
          for i in 1 2 3; do
            if make -s manifest PROFILE="${PROFILE}" PACKAGES="${LEFT}" > _manifest.log 2>&1; then
              echo "Manifest OK (round ${i})"; break
            fi
            MISS=$(awk '/Cannot install package/{print $5}' _manifest.log | sort -u | xargs || true)
            if [ -z "${MISS}" ]; then
              echo "Manifest failed but no 'Cannot install package ...' lines found"; break
            fi
            echo "Round ${i} remove: ${MISS}"
            for m in ${MISS}; do
              LEFT="$(echo " ${LEFT} " | sed "s/ ${m} / /g" | xargs echo)"
            done
          done
          echo "PACKAGES(final)=${LEFT}"
          echo "PACKAGES_FINAL=${LEFT}" >> "$GITHUB_ENV"

      - name: Build image (ext4, rootfs=${{ env.ROOTFS_MB }}MiB)
        shell: bash
        run: |
          set -euxo pipefail
          cd "${IB_DIR}"
          make -j"$(nproc)" image \
            PROFILE="${PROFILE}" \
            PACKAGES="${PACKAGES_FINAL}" \
            FILES=files

      - name: Collect artifacts
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p out
          cp -av "${IB_DIR}/bin/targets/x86/64/"* out/

      # 可选：验证分区大小，避免“看起来还是128M”的错觉
      - name: Verify rootfs partition size
        shell: bash
        run: |
          set -euxo pipefail
          IMG=$(ls out/*combined-efi*.img* out/*combined*.img* 2>/dev/null | head -n1)
          if [[ "$IMG" == *.gz ]]; then gunzip -kf "$IMG"; IMG="${IMG%.gz}"; fi
          echo "Inspect: $IMG"
          fdisk -l "$IMG" || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-x86_64-24.10.2-ext4-${{ env.PROFILE }}
          path: out
          if-no-files-found: error
